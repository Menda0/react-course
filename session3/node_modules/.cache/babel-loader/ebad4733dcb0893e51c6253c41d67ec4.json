{"ast":null,"code":"export var LOAD_JOB=\"LOAD_JOB\";var loadJob=function loadJob(job){return{type:LOAD_JOB,job:job};};export var getJob=function getJob(jobId){return function(dispatch){var url=\"https://jobs.github.com/positions/\".concat(jobId,\".json\");var proxyUrl=\"https://api.codetabs.com/v1/proxy?quest=\".concat(url);fetch(proxyUrl,{crossDomain:true,method:'GET'}).then(function(response){if(response.ok){response.json().then(function(job){dispatch(loadJob(job));});}}).catch(function(error){console.error(error);});};};","map":{"version":3,"sources":["/Users/menda0/Projects/react-course/session3/src/store/actions/JobActions.js"],"names":["LOAD_JOB","loadJob","job","type","getJob","jobId","dispatch","url","proxyUrl","fetch","crossDomain","method","then","response","ok","json","catch","error","console"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,UAAjB,CAEP,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,QAAU,CAACC,IAAI,CAACH,QAAN,CAAgBE,GAAG,CAAHA,GAAhB,CAAV,EAAhB,CAEA,MAAO,IAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CAC7B,MAAO,UAACC,QAAD,CAAc,CACjB,GAAMC,CAAAA,GAAG,6CAAwCF,KAAxC,SAAT,CACA,GAAMG,CAAAA,QAAQ,mDAA8CD,GAA9C,CAAd,CAEAE,KAAK,CAACD,QAAD,CAAW,CACRE,WAAW,CAAE,IADL,CAERC,MAAM,CAAE,KAFA,CAAX,CAAL,CAGOC,IAHP,CAGY,SAAUC,QAAV,CAAoB,CAC5B,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACbD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,SAAAV,GAAG,CAAI,CACxBI,QAAQ,CAACL,OAAO,CAACC,GAAD,CAAR,CAAR,CACH,CAFD,EAGH,CACJ,CATD,EASGc,KATH,CASS,SAAUC,KAAV,CAAiB,CACtBC,OAAO,CAACD,KAAR,CAAcA,KAAd,EACH,CAXD,EAYH,CAhBD,CAiBH,CAlBM","sourcesContent":["export const LOAD_JOB = \"LOAD_JOB\";\n\nconst loadJob = (job) => ({type:LOAD_JOB, job});\n\nexport const getJob = (jobId) => {\n    return (dispatch) => {\n        const url = `https://jobs.github.com/positions/${jobId}.json`;\n        const proxyUrl = `https://api.codetabs.com/v1/proxy?quest=${url}`;\n\n        fetch(proxyUrl, {\n                crossDomain: true,\n                method: 'GET'\n            }).then(function (response) {\n            if (response.ok) {\n                response.json().then(job => {\n                    dispatch(loadJob(job));\n                })\n            }\n        }).catch(function (error) {\n            console.error(error)\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}