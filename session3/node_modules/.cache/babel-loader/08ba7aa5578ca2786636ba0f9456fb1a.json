{"ast":null,"code":"export var LOAD_JOBS=\"LOAD_JOBS\";var loadJobs=function loadJobs(jobs){return{type:LOAD_JOBS,jobs:jobs};};export var getJobs=function getJobs(location,description){return function(dispatch){var url=\"https://jobs.github.com/positions.json?description=\".concat(encodeURI(description),\"&location=\").concat(encodeURI(location));var proxyUrl=\"https://api.codetabs.com/v1/proxy?quest=\".concat(url);fetch(proxyUrl,{crossDomain:true,method:'GET'}).then(function(response){if(response.ok){response.json().then(function(jobs){dispatch(loadJobs(jobs));});}}).catch(function(error){console.error(error);});};};","map":{"version":3,"sources":["/Users/menda0/Projects/react-course/session3/src/store/actions/JobsActions.js"],"names":["LOAD_JOBS","loadJobs","jobs","type","getJobs","location","description","dispatch","url","encodeURI","proxyUrl","fetch","crossDomain","method","then","response","ok","json","catch","error","console"],"mappings":"AACA,MAAO,IAAMA,CAAAA,SAAS,CAAG,WAAlB,CAEP,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACvB,MAAO,CACHC,IAAI,CAAEH,SADH,CAEHE,IAAI,CAAJA,IAFG,CAAP,CAIH,CALD,CAOA,MAAO,IAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAWC,WAAX,CAA2B,CAC9C,MAAO,UAACC,QAAD,CAAc,CACjB,GAAMC,CAAAA,GAAG,8DAAyDC,SAAS,CAACH,WAAD,CAAlE,sBAA4FG,SAAS,CAACJ,QAAD,CAArG,CAAT,CACA,GAAMK,CAAAA,QAAQ,mDAA8CF,GAA9C,CAAd,CAEAG,KAAK,CAACD,QAAD,CAAW,CACRE,WAAW,CAAE,IADL,CAERC,MAAM,CAAE,KAFA,CAAX,CAAL,CAGOC,IAHP,CAGY,SAAUC,QAAV,CAAoB,CAC5B,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACbD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,SAAAZ,IAAI,CAAI,CACzBK,QAAQ,CAACN,QAAQ,CAACC,IAAD,CAAT,CAAR,CACH,CAFD,EAGH,CACJ,CATD,EASGgB,KATH,CASS,SAAUC,KAAV,CAAiB,CACtBC,OAAO,CAACD,KAAR,CAAcA,KAAd,EACH,CAXD,EAYH,CAhBD,CAiBH,CAlBM","sourcesContent":["\nexport const LOAD_JOBS = \"LOAD_JOBS\";\n\nconst loadJobs = (jobs) => {\n    return {\n        type: LOAD_JOBS,\n        jobs\n    }\n};\n\nexport const getJobs = (location, description) => {\n    return (dispatch) => {\n        const url = `https://jobs.github.com/positions.json?description=${encodeURI(description)}&location=${encodeURI(location)}`;\n        const proxyUrl = `https://api.codetabs.com/v1/proxy?quest=${url}`;\n\n        fetch(proxyUrl, {\n                crossDomain: true,\n                method: 'GET'\n            }).then(function (response) {\n            if (response.ok) {\n                response.json().then(jobs => {\n                    dispatch(loadJobs(jobs));\n                })\n            }\n        }).catch(function (error) {\n            console.error(error)\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}