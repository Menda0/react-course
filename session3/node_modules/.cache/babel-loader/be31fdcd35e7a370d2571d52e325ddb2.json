{"ast":null,"code":"export const LOAD_JOB = \"LOAD_JOB\";\n\nconst loadJob = job => ({\n  type: LOAD_JOB,\n  job\n});\n\nexport const getJob = jobId => {\n  return dispatch => {\n    const url = \"https://jobs.github.com/positions/\".concat(jobId);\n    fetch(url, {\n      crossDomain: true,\n      method: 'GET'\n    }).then(function (response) {\n      if (response.ok) {\n        response.json().then(job => {\n          dispatch(loadJob(job));\n        });\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/menda0/Projects/react-course/session3/src/store/actions/JobActions.js"],"names":["LOAD_JOB","loadJob","job","type","getJob","jobId","dispatch","url","fetch","crossDomain","method","then","response","ok","json","catch","error","console"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,UAAjB;;AAEP,MAAMC,OAAO,GAAIC,GAAD,KAAU;AAACC,EAAAA,IAAI,EAACH,QAAN;AAAgBE,EAAAA;AAAhB,CAAV,CAAhB;;AAEA,OAAO,MAAME,MAAM,GAAIC,KAAD,IAAW;AAC7B,SAAQC,QAAD,IAAc;AACjB,UAAMC,GAAG,+CAAwCF,KAAxC,CAAT;AAEAG,IAAAA,KAAK,CAACD,GAAD,EAAM;AACHE,MAAAA,WAAW,EAAE,IADV;AAEHC,MAAAA,MAAM,EAAE;AAFL,KAAN,CAAL,CAGOC,IAHP,CAGY,UAAUC,QAAV,EAAoB;AAC5B,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBT,GAAG,IAAI;AACxBI,UAAAA,QAAQ,CAACL,OAAO,CAACC,GAAD,CAAR,CAAR;AACH,SAFD;AAGH;AACJ,KATD,EASGa,KATH,CASS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAXD;AAYH,GAfD;AAgBH,CAjBM","sourcesContent":["export const LOAD_JOB = \"LOAD_JOB\";\n\nconst loadJob = (job) => ({type:LOAD_JOB, job});\n\nexport const getJob = (jobId) => {\n    return (dispatch) => {\n        const url = `https://jobs.github.com/positions/${jobId}`;\n\n        fetch(url, {\n                crossDomain: true,\n                method: 'GET'\n            }).then(function (response) {\n            if (response.ok) {\n                response.json().then(job => {\n                    dispatch(loadJob(job));\n                })\n            }\n        }).catch(function (error) {\n            console.error(error)\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}